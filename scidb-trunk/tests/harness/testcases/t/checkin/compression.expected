SCIDB QUERY : <create array all_types_no_compression < a01  : bool, a02  : char, a03  : datetime, a04  : datetimetz, a05  : double, a06  : float, a07  : int16, a08  : int32, a09  : int64, a10  : int8, a11  : string, a12  : uint16, a13  : uint32, a14  : uint64, a15  : uint8, a16  : bool null, a17  : char null, a18  : datetime null, a19  : datetimetz null, a20  : double null, a21  : float null, a22  : int16 null, a23  : int32 null, a24  : int64 null, a25  : int8 null, a26  : string null, a27  : uint16 null, a28  : uint32 null, a29  : uint64 null, a30  : uint8 null > [ X=-1001:*,10000,90 ]>
Query was executed successfully

SCIDB QUERY : <create array all_types_zlib < a01  : bool compression 'zlib', a02  : char compression 'zlib', a03  : datetime compression 'zlib', a04  : datetimetz compression 'zlib', a05  : double compression 'zlib', a06  : float compression 'zlib', a07  : int16 compression 'zlib', a08  : int32 compression 'zlib', a09  : int64 compression 'zlib', a10  : int8 compression 'zlib', a11  : string compression 'zlib', a12  : uint16 compression 'zlib', a13  : uint32 compression 'zlib', a14  : uint64 compression 'zlib', a15  : uint8 compression 'zlib', a16  : bool null compression 'zlib', a17  : char null compression 'zlib', a18  : datetime null compression 'zlib', a19  : datetimetz null compression 'zlib', a20  : double null compression 'zlib', a21  : float null compression 'zlib', a22  : int16 null compression 'zlib', a23  : int32 null compression 'zlib', a24  : int64 null compression 'zlib', a25  : int8 null compression 'zlib', a26  : string null compression 'zlib', a27  : uint16 null compression 'zlib', a28  : uint32 null compression 'zlib', a29  : uint64 null compression 'zlib', a30  : uint8 null compression 'zlib' > [ X=-1001:*,10000,90 ]>
Query was executed successfully

SCIDB QUERY : <create array all_types_bzlib < a01  : bool compression 'bzlib', a02  : char compression 'bzlib', a03  : datetime compression 'bzlib', a04  : datetimetz compression 'bzlib', a05  : double compression 'bzlib', a06  : float compression 'bzlib', a07  : int16 compression 'bzlib', a08  : int32 compression 'bzlib', a09  : int64 compression 'bzlib', a10  : int8 compression 'bzlib', a11  : string compression 'bzlib', a12  : uint16 compression 'bzlib', a13  : uint32 compression 'bzlib', a14  : uint64 compression 'bzlib', a15  : uint8 compression 'bzlib', a16  : bool null compression 'bzlib', a17  : char null compression 'bzlib', a18  : datetime null compression 'bzlib', a19  : datetimetz null compression 'bzlib', a20  : double null compression 'bzlib', a21  : float null compression 'bzlib', a22  : int16 null compression 'bzlib', a23  : int32 null compression 'bzlib', a24  : int64 null compression 'bzlib', a25  : int8 null compression 'bzlib', a26  : string null compression 'bzlib', a27  : uint16 null compression 'bzlib', a28  : uint32 null compression 'bzlib', a29  : uint64 null compression 'bzlib', a30  : uint8 null compression 'bzlib' > [ X=-1001:*,10000,90 ]>
Query was executed successfully

SCIDB QUERY : <store ( cast ( project ( apply ( build ( < dummy : bool > [ X=-1001:20001,10000,90 ], true ), a01, iif ( X%2=0, true, false ), a02, iif ( X%26=0,'A',iif(X%26=1,'B',iif(X%26=2,'C',iif(X%26=3,'D',iif(X%26=4,'E',iif(X%26=5,'F', iif ( X%26=6,'G',iif(X%26=7,'H',iif(X%26=8,'I',iif(X%26=9,'J',iif(X%26=10,'K',iif(X%26=11,'L', iif ( X%26=12,'M',iif(X%26=13,'N',iif(X%26=14,'O',iif(X%26=15,'P',iif(X%26=16,'Q',iif(X%26=17,'R', iif ( X%26=18,'S',iif(X%26=19,'T',iif(X%26=20,'U',iif(X%26=21,'V',iif(X%26=22,'W',iif(X%26=23,'X', iif ( X%26=24,'Y', 'Z'))))))))))))))))))))))))), a03, datetime('2010-01-01 00:00:00') + ( X * 3600 ) + X, a04, append_offset(datetime('2010-01-01 00:00:00') + ( X * 3600 ) + X, X * 1000), a05, double( X ), a06, float( X ), a07, int16(X%(pow(2,16)-1)), a08, int32(X%(pow(2,32)-1)), a09, X, a10, int8(X%pow(2,8)-1), a11, 'A' + string(X) + 'Z', a12, uint16(X%(pow(2,16)-1)), a13, uint32(X%(pow(2,32)-1)), a14, uint64(X), a15, uint8(X%pow(2,8)-1), a16, iif (X%3=0, missing(0), iif ( X%2=0, true, false )), a17, iif (X%3=0, missing(0), iif ( X%26=0,'A',iif(X%26=1,'B',iif(X%26=2,'C',iif(X%26=3,'D',iif(X%26=4,'E',iif(X%26=5,'F', iif ( X%26=6,'G',iif(X%26=7,'H',iif(X%26=8,'I',iif(X%26=9,'J',iif(X%26=10,'K',iif(X%26=11,'L', iif ( X%26=12,'M',iif(X%26=13,'N',iif(X%26=14,'O',iif(X%26=15,'P',iif(X%26=16,'Q',iif(X%26=17,'R', iif ( X%26=18,'S',iif(X%26=19,'T',iif(X%26=20,'U',iif(X%26=21,'V',iif(X%26=22,'W',iif(X%26=23,'X', iif ( X%26=24,'Y', 'Z')))))))))))))))))))))))))), a18, iif (X%3=0, missing(0), iif( X%3=0, missing(8), datetime('2010-01-01 00:00:00') + ( X * 3600 ) + X)), a19, iif (X%3=0, missing(0), append_offset(datetime('2010-01-01 00:00:00') + ( X * 3600 ) + X, X * 1000)), a20, iif (X%3=0, missing(0), double( X )), a21, iif (X%3=0, missing(0), float( X )), a22, iif (X%3=0, missing(0), int16(X%(pow(2,16)-1))), a23, iif (X%3=0, missing(0), int32(X%(pow(2,32)-1))), a24, iif (X%3=0, missing(0), X), a25, iif (X%3=0, missing(0), int8(X%pow(2,8)-1)), a26, iif (X%3=0, missing(0), 'A' + string(X) + 'Z'), a27, iif (X%3=0, missing(0), uint16(X%(pow(2,16)-1))), a28, iif (X%3=0, missing(0), uint32(X%(pow(2,32)-1))), a29, iif (X%3=0, missing(0), uint64(X)), a30, iif (X%3=0, missing(0), uint8(X%pow(2,8)-1))), a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30), < a01  : bool, a02  : char, a03  : datetime, a04  : datetimetz, a05  : double, a06  : float, a07  : int16, a08  : int32, a09  : int64, a10  : int8, a11  : string, a12  : uint16, a13  : uint32, a14  : uint64, a15  : uint8, a16  : bool null, a17  : char null, a18  : datetime null, a19  : datetimetz null, a20  : double null, a21  : float null, a22  : int16 null, a23  : int32 null, a24  : int64 null, a25  : int8 null, a26  : string null, a27  : uint16 null, a28  : uint32 null, a29  : uint64 null, a30  : uint8 null > [ X=-1001:20001,10000,90 ]), all_types_no_compression)>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store ( all_types_no_compression, all_types_zlib )>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <store ( all_types_zlib, all_types_bzlib )>
[Query was executed successfully, ignoring data output by this query.]

SCIDB QUERY : <project ( apply ( join ( aggregate ( all_types_no_compression, count(*) AS CNT_A ) AS _A_, join ( aggregate ( all_types_zlib, count(*) AS CNT_B ) AS _B_, aggregate ( filter ( join ( all_types_no_compression AS A, all_types_zlib AS B ), ( ( A.a01 = B.a01 ) AND ( A.a02 = B.a02 ) AND ( A.a03 = B.a03 ) AND ( A.a04 = B.a04 ) AND ( A.a05 = B.a05 ) AND ( A.a06 = B.a06 ) AND ( A.a07 = B.a07 ) AND ( A.a08 = B.a08 ) AND ( A.a09 = B.a09 ) AND ( A.a10 = B.a10 ) AND ( A.a11 = B.a11 ) AND ( A.a12 = B.a12 ) AND ( A.a13 = B.a13 ) AND ( A.a14 = B.a14 ) AND ( A.a15 = B.a15 ) AND ( iif ( missing_reason ( A.a16 ) = missing_reason ( B.a16 ), true, A.a16 = B.a16 )) AND ( iif ( missing_reason ( A.a17 ) = missing_reason ( B.a17 ), true, A.a17 = B.a17 )) AND ( iif ( missing_reason ( A.a18 ) = missing_reason ( B.a18 ), true, A.a18 = B.a18 )) AND ( iif ( missing_reason ( A.a19 ) = missing_reason ( B.a19 ), true, A.a19 = B.a19 )) AND ( iif ( missing_reason ( A.a20 ) = missing_reason ( B.a20 ), true, A.a20 = B.a20 )) AND ( iif ( missing_reason ( A.a21 ) = missing_reason ( B.a21 ), true, A.a21 = B.a21 )) AND ( iif ( missing_reason ( A.a22 ) = missing_reason ( B.a22 ), true, A.a22 = B.a22 )) AND ( iif ( missing_reason ( A.a23 ) = missing_reason ( B.a23 ), true, A.a23 = B.a23 )) AND ( iif ( missing_reason ( A.a24 ) = missing_reason ( B.a24 ), true, A.a24 = B.a24 )) AND ( iif ( missing_reason ( A.a25 ) = missing_reason ( B.a25 ), true, A.a25 = B.a25 )) AND ( iif ( missing_reason ( A.a26 ) = missing_reason ( B.a26 ), true, A.a26 = B.a26 )) AND ( iif ( missing_reason ( A.a27 ) = missing_reason ( B.a27 ), true, A.a27 = B.a27 )) AND ( iif ( missing_reason ( A.a28 ) = missing_reason ( B.a28 ), true, A.a28 = B.a28 )) AND ( iif ( missing_reason ( A.a29 ) = missing_reason ( B.a29 ), true, A.a29 = B.a29 )) AND ( iif ( missing_reason ( A.a30 ) = missing_reason ( B.a30 ), true, A.a30 = B.a30 )))), count(*) AS CNT_AB) AS _C_)), res, 'ZLIB: ' + iif( ( _A_.CNT_A = _B_.CNT_B AND _A_.CNT_A = _C_.CNT_AB ), 'PASS', 'FAIL' )), res)>
{i} res
{0} 'ZLIB: PASS'

SCIDB QUERY : <project ( apply ( join ( aggregate ( all_types_no_compression, count(*) AS CNT_A ) AS _A_, join ( aggregate ( all_types_bzlib, count(*) AS CNT_B ) AS _B_, aggregate ( filter ( join ( all_types_no_compression AS A, all_types_bzlib AS B ), ( ( A.a01 = B.a01 ) AND ( A.a02 = B.a02 ) AND ( A.a03 = B.a03 ) AND ( A.a04 = B.a04 ) AND ( A.a05 = B.a05 ) AND ( A.a06 = B.a06 ) AND ( A.a07 = B.a07 ) AND ( A.a08 = B.a08 ) AND ( A.a09 = B.a09 ) AND ( A.a10 = B.a10 ) AND ( A.a11 = B.a11 ) AND ( A.a12 = B.a12 ) AND ( A.a13 = B.a13 ) AND ( A.a14 = B.a14 ) AND ( A.a15 = B.a15 ) AND ( iif ( missing_reason ( A.a16 ) = missing_reason ( B.a16 ), true, A.a16 = B.a16 )) AND ( iif ( missing_reason ( A.a17 ) = missing_reason ( B.a17 ), true, A.a17 = B.a17 )) AND ( iif ( missing_reason ( A.a18 ) = missing_reason ( B.a18 ), true, A.a18 = B.a18 )) AND ( iif ( missing_reason ( A.a19 ) = missing_reason ( B.a19 ), true, A.a19 = B.a19 )) AND ( iif ( missing_reason ( A.a20 ) = missing_reason ( B.a20 ), true, A.a20 = B.a20 )) AND ( iif ( missing_reason ( A.a21 ) = missing_reason ( B.a21 ), true, A.a21 = B.a21 )) AND ( iif ( missing_reason ( A.a22 ) = missing_reason ( B.a22 ), true, A.a22 = B.a22 )) AND ( iif ( missing_reason ( A.a23 ) = missing_reason ( B.a23 ), true, A.a23 = B.a23 )) AND ( iif ( missing_reason ( A.a24 ) = missing_reason ( B.a24 ), true, A.a24 = B.a24 )) AND ( iif ( missing_reason ( A.a25 ) = missing_reason ( B.a25 ), true, A.a25 = B.a25 )) AND ( iif ( missing_reason ( A.a26 ) = missing_reason ( B.a26 ), true, A.a26 = B.a26 )) AND ( iif ( missing_reason ( A.a27 ) = missing_reason ( B.a27 ), true, A.a27 = B.a27 )) AND ( iif ( missing_reason ( A.a28 ) = missing_reason ( B.a28 ), true, A.a28 = B.a28 )) AND ( iif ( missing_reason ( A.a29 ) = missing_reason ( B.a29 ), true, A.a29 = B.a29 )) AND ( iif ( missing_reason ( A.a30 ) = missing_reason ( B.a30 ), true, A.a30 = B.a30 )))), count(*) AS CNT_AB) AS _C_)), res, 'BZLIB: ' + iif( ( _A_.CNT_A = _B_.CNT_B AND _A_.CNT_A = _C_.CNT_AB ), 'PASS', 'FAIL' )), res)>
{i} res
{0} 'BZLIB: PASS'

SCIDB QUERY : <apply ( op_count ( filter ( cross_join ( aggregate ( filter ( cross_join ( list ('arrays') AS ARRAYS, build ( < array_name : string > [ ANum=0:*,10,0 ], '[("all_types_no_compression"),("all_types_zlib"),("all_types_bzlib")]', true) AS NAMES_LIST), ARRAYS.name = NAMES_LIST.array_name), MAX ( ARRAYS.aid ) AS array_id, MAX ( NAMES_LIST.array_name ) AS name, NAMES_LIST.ANum) AS A_IDS, list('chunk map') AS C), A_IDS.array_id = C.uaid AND C.csize > C.usize)), result, iif ( count = 0, 'PASS: NO METHOD YIELDS LARGER POST COMPRESSION CHUNK SIZES', 'FAIL: ENCOUNTERED ' + string ( count ) + ' CASES WHERE COMPRESSED SIZE LARGER'))>
{i} count,result
{0} 0,'PASS: NO METHOD YIELDS LARGER POST COMPRESSION CHUNK SIZES'

SCIDB QUERY : <remove ( all_types_no_compression )>
Query was executed successfully

SCIDB QUERY : <remove ( all_types_zlib )>
Query was executed successfully

SCIDB QUERY : <remove ( all_types_bzlib )>
Query was executed successfully

