# Test automatic repartitioning of join() inputs.

# Differing chunksizes and overlaps.

--setup

create array aa <v:int64 null default null> [x=0:19,10,5,y=0:9,10,0]
create array bb <s:string NULL DEFAULT null> [z=0:19,100,0,w=0:9,10,4]
--start-igdata
store(build(aa, x+y), aa)
store(between(build(bb, iif((z % 2) = 0, 'even', 'odd')), 5,2, 15,7 ), bb)
--stop-igdata

--test

--start-query-logging
join(aa, bb)
join(bb, aa)

--start-igdata
# The overlap of join is the MIN of the two inputs, so
# the explicit repart overlap needs to be <= the overlap in aa
join(aa, repart(bb,<s:string NULL DEFAULT null>[z=0:19,10,0,w=0:9,10,0]))
join(aa, repart(bb,<s:string NULL DEFAULT null>[z=0:19,10,5,w=0:9,10,0]))
# If the min is in the exemplar schema (aa) then the explicit repart cannot
# have an overlap > the exemplar.
--error --code=scidb::SCIDB_SE_OPERATOR::SCIDB_LE_BAD_EXPLICIT_REPART  "join(aa, repart(bb,<s:string NULL DEFAULT null>[z=0:19,10,6,w=0:9,10,0]))"
--error --code=scidb::SCIDB_SE_OPERATOR::SCIDB_LE_BAD_EXPLICIT_REPART  "join(aa, repart(bb,<s:string NULL DEFAULT null>[z=0:19,10,0,w=0:9,10,1]))"

--stop-igdata
--stop-query-logging

--cleanup

remove(aa)
remove(bb)
