--setup
--set-format dcsv
--start-query-logging
load_library('linear_algebra')
create array M1 <val: double> [I=1:10,5,0, J=1:6,3,0]
create array M2 <val: double> [I=1:6,3,0, J=1:15,5,0]
create array M3 <val: double> [I=1:5,3,0]
create array M4 <val: double> [I=1:5,3,0]
create array M5 <val: string> [I=1:10,5,0, J=1:6,3,0]
create array M6 <val: string> [I=1:6,3,0, J=1:15,5,0]
create array M7 <val: double null> [I=1:10,5,0, J=1:6,3,0]
create array M8 <val: double> [I=1:6,3,0, J=1:15,5,0]
create array M9 <val: double> [I=1:10,5,0, J=1:6,3,0]
create array M10 <val: double> [I=1:6,3,0, J=1:15,5,0]
create array M12 <val: double> [I=1:*,3,0, J=1:15,5,0]
create array M13 <val: double> [I=1:6,2,0, J=1:15,4,0]
--start-igdata
store(build(M1, (I*3)+J), M1)
store(build(M2, (I*3)+J), M2)
store(build(M3, (I+1)), M3)
store(build(M4, (I+1)), M4)
store(build(M5, (I*3)+J), M5)
store(build(M6, (I*3)+J), M6)
--shell --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(M7, '${TEST_DATA_DIR}/multiply7.txt')""
store(build(M8, (I*3)+J), M8)
--shell --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(M9, '${TEST_DATA_DIR}/multiply9.txt')""
--shell --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(M10, '${TEST_DATA_DIR}/multiply10.txt')""

# Array with more than one attribute
store(cross_join(M1, M1), M11)

store(M2, M12)
store(M2, M13)
--stop-igdata

--test
spgemm(M1,M2)
spgemm(M9,M10)
--shell --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(M1, '${TEST_DATA_DIR}/multiply1_na.txt')""
spgemm(M1,M2)
--shell --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(M1, '${TEST_DATA_DIR}/multiply1_nan.txt')""
spgemm(M1,M2)
--shell --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(M1, '${TEST_DATA_DIR}/multiply1_inf.txt')""
spgemm(M1,M2)

# Test single attribute array
--error --code=scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_OP_MULTIPLY_ERROR2 "spgemm(M1,M11)"

# Test dimension size != 2
--error --code=scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_OP_MULTIPLY_ERROR3 "spgemm(M3, M4)"

# Test unbounded max dimension
--error --code=scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_OP_MULTIPLY_ERROR4 "spgemm(M1,M12)"

# Test mismatch length of dimension
--error --code=scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_OP_MULTIPLY_ERROR5 "spgemm(M1,M9)"

# Test mismatch chunk intervals
--error --code=scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_OP_MULTIPLY_ERROR6 "spgemm(M1,M13)"

# Test mismatch data type
--error --code=scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_OP_MULTIPLY_ERROR7 "spgemm(M1,M6)"

# Test nullable attribute
--error --code=scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_OP_MULTIPLY_ERROR8 "spgemm(M7,M8)"

# Test data type other than Float and Double
--error --code=scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_OP_MULTIPLY_ERROR9 "spgemm(M5, M6)"

--cleanup
remove(M1)
remove(M2)
remove(M3)
remove(M4)
remove(M5)
remove(M6)
remove(M7)
remove(M8)
remove(M9)
remove(M10)
remove(M11)
remove(M12)
remove(M13)
--stop-query-logging
--reset-format
